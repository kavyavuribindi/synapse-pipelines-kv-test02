{
	"name": "pl_SAMPLE_COPY_myLocalDB_to_Datalake",
	"properties": {
		"activities": [
			{
				"name": "LOOKUP_TABLE_NAMES",
				"description": "Gets the list of all the tables present in Database",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "\nSELECT s.name AS SchemaName,\n       t.name AS TableName\nFROM sys.schemas AS s \nINNER JOIN sys.tables AS t\n    ON s.schema_id=t.schema_id;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "samp_db_tf",
						"type": "DatasetReference",
						"parameters": {
							"dbName": "db-test-src"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "FOR_EACH_TABLE",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LOOKUP_TABLE_NAMES",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LOOKUP_TABLE_NAMES').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "COPY_TABLE",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Source",
									"value": "."
								},
								{
									"name": "Destination",
									"value": "@{item().SchemaName}.@{item().TableName}"
								}
							],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "@concat('SELECT * FROM ', item().SchemaName, '.', item().TableName)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings",
										"copyBehavior": "PreserveHierarchy"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ""
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "samp_db_tf",
									"type": "DatasetReference",
									"parameters": {
										"dbName": "db-test-src"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_sakvtest02",
									"type": "DatasetReference",
									"parameters": {
										"table_name": {
											"value": "@concat(item().SchemaName, item().TableName)",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2023-12-04T18:14:57Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}